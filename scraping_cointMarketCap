{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4",
      "authorship_tag": "ABX9TyMwaXF7PeZ9QBJ6iBpCpkH/",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Ghalia9/Due-Dilligence_RiskScouts/blob/main/scraping_cointMarketCap\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pip install requests pandas\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "59TXsZU4kf_z",
        "outputId": "f4e87da6-bd72-4204-c9d9-ddb9649c034e"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (2.32.3)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (2.2.2)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests) (3.4.1)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests) (2.3.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests) (2025.1.31)\n",
            "Requirement already satisfied: numpy>=1.23.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (1.26.4)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.1)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "import json\n",
        "import os\n",
        "\n",
        "# Store API key securely (replace with your key)\n",
        "os.environ[\"CMC_API_KEY\"] = \"0c69bbe7-be11-4f83-be18-7f3116b0b08e\"\n",
        "API_KEY = os.getenv(\"CMC_API_KEY\")\n",
        "\n",
        "# CoinMarketCap API Endpoint\n",
        "CMC_URL = \"https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\"\n",
        "\n",
        "HEADERS = {\n",
        "    \"Accepts\": \"application/json\",\n",
        "    \"X-CMC_PRO_API_KEY\": API_KEY,  # Authentication\n",
        "}\n",
        "\n",
        "# Parameters to fetch large datasets\n",
        "PARAMS = {\n",
        "    \"start\": 1,  # Start from the first cryptocurrency\n",
        "    \"limit\": 100,  # Limit the results (set 100 per request)\n",
        "    \"convert\": \"USD\"  # Convert prices to USD\n",
        "}\n"
      ],
      "metadata": {
        "id": "aN48CPQ9ki6y"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def fetch_large_crypto_data():\n",
        "    all_data = []\n",
        "    limit = 100  # Number of coins per request\n",
        "    total_coins = 4000  # Total number of coins you want to scrape\n",
        "    pages = total_coins // limit  # Calculate number of requests needed\n",
        "\n",
        "    for page in range(pages):\n",
        "        start = page * limit + 1  # Adjust start for pagination\n",
        "        PARAMS[\"start\"] = start\n",
        "        response = requests.get(CMC_URL, headers=HEADERS, params=PARAMS)\n",
        "\n",
        "        if response.status_code == 200:\n",
        "            data = response.json()\n",
        "            all_data.extend(data[\"data\"])  # Add the data to the list\n",
        "        else:\n",
        "            print(f\"Error {response.status_code}: {response.text}\")\n",
        "            break\n",
        "\n",
        "    return all_data\n"
      ],
      "metadata": {
        "id": "VNFHrFMLksky"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "def extract_and_save_data():\n",
        "    data = fetch_large_crypto_data()\n",
        "    cryptos = []\n",
        "\n",
        "    for crypto in data:\n",
        "        cryptos.append({\n",
        "            \"name\": crypto[\"name\"],\n",
        "            \"symbol\": crypto[\"symbol\"],\n",
        "            \"price\": crypto[\"quote\"][\"USD\"][\"price\"],\n",
        "            \"market_cap\": crypto[\"quote\"][\"USD\"][\"market_cap\"],\n",
        "            \"volume_24h\": crypto[\"quote\"][\"USD\"][\"volume_24h\"],\n",
        "            \"percent_change_24h\": crypto[\"quote\"][\"USD\"][\"percent_change_24h\"],\n",
        "        })\n",
        "\n",
        "    df = pd.DataFrame(cryptos)\n",
        "    df.to_csv(\"large_crypto_data.csv\", index=False)\n",
        "    print(\"Data saved to large_crypto_data.csv\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    extract_and_save_data()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2-iReIPok0PJ",
        "outputId": "7318e300-84ec-42f9-d2c4-7a539df9b67b"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data saved to large_crypto_data.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import time\n",
        "\n",
        "def fetch_large_crypto_data_with_retries():\n",
        "    all_data = []\n",
        "    limit = 100  # Number of coins per request\n",
        "    total_coins = 1000  # Total number of coins you want to scrape\n",
        "    pages = total_coins // limit  # Calculate number of requests needed\n",
        "\n",
        "    for page in range(pages):\n",
        "        start = page * limit + 1  # Adjust start for pagination\n",
        "        PARAMS[\"start\"] = start\n",
        "        response = requests.get(CMC_URL, headers=HEADERS, params=PARAMS)\n",
        "\n",
        "        if response.status_code == 200:\n",
        "            data = response.json()\n",
        "            all_data.extend(data[\"data\"])  # Add the data to the list\n",
        "        else:\n",
        "            print(f\"Error {response.status_code}: {response.text}\")\n",
        "            if response.status_code == 429:  # Rate limit error\n",
        "                print(\"Rate limit exceeded. Retrying in 60 seconds...\")\n",
        "                time.sleep(60)  # Wait for a minute before retrying\n",
        "            break\n",
        "\n",
        "    return all_data\n"
      ],
      "metadata": {
        "id": "oQBA_QXtlA_3"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "df = pd.read_csv(\"large_crypto_data.csv\")\n",
        "\n",
        "# Sort by market cap\n",
        "df = df.sort_values(by=\"market_cap\", ascending=False)\n",
        "\n",
        "# Plot top 10\n",
        "df.head(10).plot(kind=\"bar\", x=\"name\", y=\"market_cap\", title=\"Top 10 Cryptocurrencies by Market Cap\", legend=False)\n",
        "plt.ylabel(\"Market Cap (USD)\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 540
        },
        "id": "mFK_7vkplDnx",
        "outputId": "aee85994-41a4-49ca-eaff-c49ae2621a64"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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nJycULFiRXz99deIjY3N9zphYWFQKBTKh7Ozc2GGTURERBLTOAE6cuQIvvjiC+Xz5cuXIysrCzdu3MC5c+cQEhKCX375pVCCzMuvv/6K1NRUdOnSRVnm4+OD8PBwREZGYv78+bh9+zYaNWqElJSUPK8zZswYJCUlKR/37t0rivCJiIhIIhp3gT148ABubm7K51FRUfjiiy+gUCgAAEFBQVi6dGnBR5iHVatWYcKECdiyZYvK/mNvdql5enrCx8cHLi4uWLt2LXr27JnrtUxMTFS69oiIiKh407gFyNTUFC9evFA+P378OHx8fFSOF9VCiBEREejVqxfWrl0LX1/ffOtaWVnB3d0dMTExRRIbERER6T6NE6CaNWtixYoVAIBDhw4hISEBzZo1Ux6/efMmnJycCj7Ct6xevRrBwcFYvXo1Wrdu/c76qampuHnzJhwdHQs9NiIiItIPGneBjRs3DgEBAVi7di3i4uLQvXt3laRi06ZNaNCggVYvnpqaqtIyc/v2bURHR8PGxgbly5fHmDFj8ODBAyxfvhzA626voKAgzJ49Gz4+PoiPjwfwejPWnK644cOHo23btnBxccHDhw8RGhoKIyMjdOvWTavYiIiIqPjSah2g06dPY/fu3XBwcEDnzp1VjtesWRPe3t5avfjp06fRtGlT5fOQkBAAr8cThYeHIy4uTmUG119//YVXr15hwIABGDBggLI8pz4A3L9/H926dcPTp09ha2uLhg0b4vjx47C1tdUqNiIiIiq+ZIIbeKlJTk6GQqFAUlJSvhvAvsl19PZCjgq4M/XdXX5ERESGSpu/3xq3AM2ZMyfXcoVCAXd3d9SrV0+7KImIiIgkonECNHPmzFzLExMTkZSUhPr162Pr1q1qixISERER6RqNZ4Hdvn0718fz588RExOD7Oxs/PTTT4UZKxEREVGB0DgByk/FihUxdepU7Nq1qyAuR0RERFSoCiQBAoDy5csrp6UTERER6bICS4AuXLgAFxeXgrocERERUaHReBB0cnJyruVJSUk4c+YMhg0bhqCgoAILjIiIiKiwaJwAWVlZQSaT5XpMJpOhV69eGD16dIEFRkRERFRYNE6A9u3bl2u5paUl3NzcUKpUqQILioiIiKgwabUVBhEREVFxoNEg6Df349LEgwcP3isYIiIioqKgUQL0ySefoE+fPjh16lSedZKS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SAiCgoJQt25deHt7Y9asWUhLS0NwcDAAIDAwEOXKlUNYWBgAYOLEifj0009RqVIlJCYm4pdffsHdu3fRq1cvAK9niA0dOhSTJ0+Gm5sbKlSogLFjx8LJyQnt27eX6jaJiIhIh0ieAH355Zd4/Pgxxo0bh/j4eNSsWRORkZHKQcyxsbGQy/+voer58+fo3bs34uPjYW1tjTp16uDo0aOoVq2ass7IkSORlpaG7777DomJiWjYsCEiIyPVFkwkIiIiwyQTQgipg9A1ycnJUCgUSEpK0ng8kOvo7YUcFXBnautCfw0iIiJ9pc3fb72bBUZERET0oZgAERERkcFhAkREREQGhwkQERERGRwmQERERGRwmAARERGRwWECRERERAaHCRAREREZHCZAREREZHCYABEREZHBYQJEREREBocJEBERERkcJkBERERkcJgAERERkcFhAkREREQGhwkQERERGRwmQERERGRwmAARERGRwWECRERERAaHCRAREREZHCZAREREZHCYABEREZHBYQJEREREBocJEBERERmcElIHQLrFdfT2Qn+NO1NbF/prEBER5YctQERERGRwmAARERGRwWECRERERAaHCRAREREZHCZAREREZHCYABEREZHBYQJEREREBocJEBERERkcJkBERERkcJgAERERkcHRiQRo3rx5cHV1hampKXx8fHDy5Mk86y5cuBCNGjWCtbU1rK2t4evrq1a/e/fukMlkKg9/f//Cvg0iIiLSE5InQGvWrEFISAhCQ0Nx9uxZeHl5wc/PD48ePcq1/v79+9GtWzfs27cPx44dg7OzM1q2bIkHDx6o1PP390dcXJzysXr16qK4HSIiItIDkidAM2bMQO/evREcHIxq1aphwYIFMDc3x5IlS3Ktv3LlSvTv3x81a9ZElSpVsGjRImRnZyMqKkqlnomJCRwcHJQPa2vrorgdIiIi0gOSJkAvX77EmTNn4OvrqyyTy+Xw9fXFsWPHNLpGeno6/vvvP9jY2KiU79+/H3Z2dqhcuTL69euHp0+f5nmNzMxMJCcnqzyIiIio+JI0AXry5AmysrJgb2+vUm5vb4/4+HiNrjFq1Cg4OTmpJFH+/v5Yvnw5oqKiMG3aNBw4cAABAQHIysrK9RphYWFQKBTKh7Oz8/vfFBEREem8ElIH8CGmTp2KiIgI7N+/H6ampsryrl27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\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}